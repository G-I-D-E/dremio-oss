# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "dair-connect" ]
env:
  ECR_REPOSITORY: "dair-dremio"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
#     - name: Set up JDK 11
#       uses: actions/setup-java@v3
#       with:
#         java-version: '8'
# #         distribution: 'temurin'
#         cache: maven
        
#     - name: Set up JDK 11
#       uses: actions/setup-java@v3
#       with:
#         java-version: '11'
# #         distribution: 'temurin'
#         cache: maven

    - uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: |
          8
          11

    - name: list dir
      run: |
        ls -alrt ${HOME}
        ls -alrt ~/.m2/

    - name: Configure Maven Toolchains
      run: |
        mkdir -p "~/.m2/"
        cat <<EOF > "~/.m2/toolchains.xml"
        <?xml version="1.0" encoding="UTF8"?>
        <toolchains xmlns="http://maven.apache.org/TOOLCHAINS/1.1.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/TOOLCHAINS/1.1.0 http://maven.apache.org/xsd/toolchains-1.1.0.xsd">
            <toolchain>
                <type>jdk</type>
                <provides>
                    <version>11</version>
                </provides>
                <configuration>
                    <jdkHome>${env.JAVA_HOME_11_X64}</jdkHome>
                </configuration>
            </toolchain>
            <toolchain>
                <type>jdk</type>
                <provides>
                    <version>1.8</version>
                </provides>
                <configuration>
                    <jdkHome>${env.JAVA_HOME_8_X64}</jdkHome>
                </configuration>
            </toolchain>
        </toolchains>
        EOF
        echo "Maven Toolchains configured"

#     - name: Build dremio base
#       #working-directory: dair-base
#       run: mvn clean install -DskipTests=true

    - name: list dir
      run: ls -alrt ${HOME}/.m2/ && printenv | grep JAVA_HOME
      
#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ${{ secrets.AWS_REGION }}

#     - name: Login to Amazon ECR
#       id: login-ecr
#       uses: aws-actions/amazon-ecr-login@v1

#     - name: Build, tag, and push image to Amazon ECR
#       id: build-image
#       env:
#         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#         IMAGE_TAG: ${{ github.sha }}
#       run: |
#         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./distribution/docker
#         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#         echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
